{"version":3,"sources":["Buisnes/hardFunc.js","Workers/testWorker.js","Workers/WebWorker.js","Components/Loader.jsx","App.js","index.js"],"names":["iterations","res","i","self","addEventListener","e","limit","data","startTime","performance","now","time","postMessage","WebWorker","workerUrl","code","toString","blob","Blob","worker","Worker","URL","createObjectURL","this","onError","console","log","lineno","filename","message","Loader","state","loaderState","timerId","timer","setTimeout","setState","length","clearTimeout","Component","defaultProps","App","props","calcHardOnGoing","calcWorkOnGoing","calcHardResult","calcWorkResult","calcHardTime","calcWorkTime","handleWorkerError","handleClick","functionName","inputValue","inputState","current","value","handleWorkerResult","calculateHard","hardFunc","calculateInWorker","calculateHardAndWorker","React","createRef","testWorker","onmessage","onerror","className","htmlFor","type","ref","name","defaultValue","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.528535a0.chunk.js","sourcesContent":["export default (iterations = 1) => {\n    let res = 0;\n    for (let i = 0; i < iterations; i++) {\n        res += 1;\n        res += res % 2;\n    }\n    return res;\n};\n","export default () => {\n  self.addEventListener('message', (e) => { // eslint-disable-line no-restricted-globals\n    if (!e) return;\n      const limit = e.data[0];\n      const startTime = performance.now();\n\n      let res = 0;\n      for (let i = 0; i < limit; i++) {\n          res += 1;\n          res += res % 2;\n      }\n      const time = (performance.now() - startTime);\n\n      postMessage({ res, time });\n\n  }, false);\n};\n","// класс обертка для веб воркеров в react\nexport default class WebWorker {\n  constructor(workerUrl) {\n    const code = workerUrl.toString();\n    const blob = new Blob([`(${code})()`]);\n    const worker = new Worker(URL.createObjectURL(blob));\n    worker.addEventListener('error', this.onError, false);\n    return worker;\n  }\n  \n  onError(e) {\n    console.log('Line: ' + e.lineno);\n    console.log('In: ' + e.filename);\n    console.log('Message: ' + e.message);\n  }\n}\n","import React, { Component } from 'react';\n\nexport class Loader extends Component {\n\n    static defaultProps = {};\n\n    state = { loaderState: '' };\n    timerId = null;\n\n    componentDidMount() {\n        this.timer();\n    }\n\n    timer = () => {\n        this.timerId = setTimeout(() => {\n            this.setState({ loaderState: this.state.loaderState.length < 3 ? this.state.loaderState + '.' : '' }, () => {\n                this.timer();\n            });\n        }, 400)\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.timerId);\n    }\n\n    render() {\n        return (\n            <span>\n                {this.state.loaderState}\n            </span>\n        );\n    }\n}\n","import React from 'react';\nimport hardFunc from './Buisnes/hardFunc';\nimport testWorker from './Workers/testWorker';\nimport WebWorker from './Workers/WebWorker';\nimport { Loader } from './Components/Loader';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n    state = {\n        calcHardOnGoing: false,\n        calcWorkOnGoing: false,\n        calcHardResult: null,\n        calcWorkResult: null,\n        calcHardTime: null,\n        calcWorkTime: null,\n    };\n\n    worker = null;\n\n    constructor(props) {\n        super(props);\n        this.inputState = React.createRef();\n    }\n\n    componentDidMount() {\n        this.worker = new WebWorker(testWorker);\n        this.worker.onmessage = this.handleWorkerResult;\n        this.worker.onerror = this.handleWorkerError;\n    }\n\n    handleWorkerError = (e) => {\n        this.setState({\n            calcWorkOnGoing: false,\n            calcWorkResult: 'ОШИБКА В ВОРКЕРЕ',\n            calcWorkTime: '',\n        });\n    };\n\n    handleClick = (functionName) => () => {\n        const inputValue = this.inputState.current.value;\n        this[functionName](inputValue);\n    };\n\n    handleWorkerResult = (e) => {\n        this.setState({\n            calcWorkOnGoing: false,\n            calcWorkResult: e.data.res,\n            calcWorkTime: e.data.time,\n        });\n    };\n\n    calculateHard = (iterations) => {\n        this.setState({ calcHardOnGoing: true }, () => {\n            setTimeout(() => {\n                const startTime = performance.now();\n                const calcHardResult = hardFunc(iterations);\n                const calcHardTime = performance.now() - startTime;\n                this.setState({\n                    calcHardResult,\n                    calcHardTime,\n                    calcHardOnGoing: false,\n                });\n            }, 0);\n        });\n    };\n\n    calculateInWorker = (iterations) => {\n        this.setState({ calcWorkOnGoing: true });\n        this.worker.postMessage([iterations, 'Понеслась!!!']);\n    };\n\n    calculateHardAndWorker = (iterations) => {\n        this.calculateInWorker(iterations);\n        this.calculateHard(iterations);\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Сравнение блокирующих и не блокирующих вычислений</h1>\n                <div className=\"columns\" >\n                    <div>\n                        <div><h2>Блокирующе вычисление</h2></div>\n                        <div>Результат вычислений: {this.state.calcHardResult}</div>\n                        <div>Время вычислений: {this.state.calcHardTime}</div>\n                    </div>\n                    <div>\n                        <div className=\"vs\" >VS</div>\n                    </div>\n                    <div>\n                        <div><h2>Вычисление в воркере</h2></div>\n                        <div>Результат вычислений: {this.state.calcWorkResult}</div>\n                        <div>Время вычислений: {this.state.calcWorkTime}</div>\n                    </div>\n                </div>\n                <div>\n                    <label htmlFor=\"count\">Кол-во итераций</label>\n                    <input type=\"number\" ref={this.inputState} name=\"count\" defaultValue=\"10000000\"/>\n                </div>\n                <div className=\"columns\">\n                    <div>\n                        <button\n                            onClick={this.handleClick('calculateHard')}\n                        >\n                            Начать тяжёлые вычисления\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                            onClick={this.handleClick('calculateHardAndWorker')}\n                        >\n                            Начать оба вычисления одновременно\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                            onClick={this.handleClick('calculateInWorker')}\n                        >\n                            Начать тяжёлые вычисления в воркере\n                        </button>\n                    </div>\n                </div>\n                {(this.state.calcHardOnGoing || this.state.calcWorkOnGoing) &&\n                    <div>\n                        Тяжёлые вычисления в процессе<Loader/>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}